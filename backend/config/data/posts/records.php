<?php

return [
    'PHP' => [
        'ООП' => [
            'items' => [
                [
                    // TODO проверить вариант с `` кавычками
                    'title' => "Вызов static метода допустим для экземпляра класса",
                    'content' => "Вызов static метода допустим для экземпляра класса (объекта)."
                ],
                [
                    'title' => "Реализация интерфейсов и сигнатура методов.",
                    'content' => "Класс реализующий интерфейс должен соблюдть сигнатуру методов интерфейсов. 
                        Не обязательно реализовывать методы в точности как они описаны в интерфейсе, 
                        можно использовать необязательные аргументы или возвращаемый тип."
                ],
                [
                    'title' => "static у функций и методов",
                    'content' => "Ключевое слово static, написанное перед присваиванием значения локальной переменной, приводит к следующим эффектам:
- Присваивание выполняется только один раз, при первом вызове функции
- Значение помеченной таким образом переменной сохраняется после окончания работы функции
- При последующих вызовах функции вместо присваивания переменная получает сохраненное ранее значение"
                ]
            ]
        ]
    ],
    'JS' => [
        'Разное' => [
            'items' => [
                [
                    'title' => "Число пользователей использующих IE 11",
                    'content' => "Число пользователей использующих IE 11 постоянно падает, на сентябырь 2018 используют 2.54%."
                ]
            ]
        ],
        'items' => [
            [
                'title' => "Тестовый пост 1",
                'content' => "Контент тестового поста 1."
            ],
            [
                'title' => "Тестовый пост 2",
                'content' => "Контент тестового поста 2."
            ],
            [
                'title' => "Тестовый пост 3",
                'content' => "Контент тестового поста 3."
            ]
        ]
    ],

    'Общая теория' => [
        'Парадигмы программирования' => [
            'Объектно-ориентированное программирование' => [
                'Класс-ориентированное программирование' => [
                    'items' => [
                        [
                            'title' => "Класс определяет структуру и функциональность",
                            'content' => "Класс определяет структуру и функциональность (поведение), одинаковую для всех экземпляров данного класса. 
                                Экземпляр является носителем данных — то есть обладает состоянием, меняющимся в соответствии с поведением, заданным классом. 
                                В класс-ориентированных языках новый экземпляр создаётся через вызов конструктора класса (возможно, с набором параметров). 
                                Получившийся экземпляр имеет структуру и поведение, жёстко заданные его классом."
                        ],
                        [
                            'title' => "Тестовый пост 1",
                            'content' => "Контент тестового поста 1."
                        ],
                        [
                            'title' => "Тестовый пост 2",
                            'content' => "Контент тестового поста 2."
                        ],
                        [
                            'title' => "Тестовый пост 3",
                            'content' => "Контент тестового поста 3."
                        ],
                        [
                            'title' => "Тестовый пост 4",
                            'content' => "Контент тестового поста 4."
                        ],
                        [
                            'title' => "Тестовый пост 5",
                            'content' => "Контент тестового поста 5."
                        ],
                        [
                            'title' => "Тестовый пост 6",
                            'content' => "Контент тестового поста 6."
                        ],
                        [
                            'title' => "Тестовый пост 7",
                            'content' => "Контент тестового поста 7."
                        ],
                        [
                            'title' => "Тестовый пост 8",
                            'content' => "Контент тестового поста 8."
                        ],
                        [
                            'title' => "Тестовый пост 9",
                            'content' => "Контент тестового поста 9."
                        ],
                        [
                            'title' => "Тестовый пост 10",
                            'content' => "Контент тестового поста 10."
                        ],
                        [
                            'title' => "Тестовый пост 11",
                            'content' => "Контент тестового поста 11."
                        ],
                        [
                            'title' => "Тестовый пост 12",
                            'content' => "Контент тестового поста 12."
                        ],
                        [
                            'title' => "Тестовый пост 13",
                            'content' => "Контент тестового поста 13."
                        ],
                        [
                            'title' => "Тестовый пост 14",
                            'content' => "Контент тестового поста 14."
                        ],
                        [
                            'title' => "Тестовый пост 15",
                            'content' => "Контент тестового поста 15."
                        ],
                        [
                            'title' => "Тестовый пост 16",
                            'content' => "Контент тестового поста 16."
                        ],
                        [
                            'title' => "Тестовый пост 17",
                            'content' => "Контент тестового поста 17."
                        ]
                    ]
                ],
                'items' => [
                    [
                        'title' => "Тестовый пост 1",
                        'content' => "Контент тестового поста 1."
                    ],
                    [
                        'title' => "Тестовый пост 2",
                        'content' => "Контент тестового поста 2."
                    ],
                    [
                        'title' => "Тестовый пост 3",
                        'content' => "Контент тестового поста 3."
                    ]
                ]
            ],
            'items' => [
                [
                    'title' => "Тестовый пост 1",
                    'content' => "Контент тестового поста 1."
                ],
                [
                    'title' => "Тестовый пост 2",
                    'content' => "Контент тестового поста 2."
                ],
                [
                    'title' => "Тестовый пост 3",
                    'content' => "Контент тестового поста 3."
                ]
            ]
        ]
    ]
];
